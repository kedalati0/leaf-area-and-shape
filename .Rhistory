head(mao)
am = merge(arch,mass,by="Plant_ID"); nrow(am)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am)
am = merge(am,mao[,c("id","sp","dbh0")],by="Plant_ID"); nrow(am) # add species identities and plant initial size
am = merge(am,mao[,c("Plant_ID","sp","dbh0")],by="Plant_ID"); nrow(am) # add species identities and plant initial size
head(mao)
# Leaf area
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); tail(area); str(area) # check data
names(area)[4]
names(area)[4] = "id"
head(area); tail(area); str(area) # check data
nrow(area) # 21069
# Get rid of non-identified entries
area = area[which(!is.na(as.numeric(area$id))),] # exclude problematic ids
nrow(area) # 20624
# Convert leaf area into cm^2
area$area.cm2 = area$Area/13819.17803
head(area)
# Calculate the average per plant
aarea = aggregate(area.cm2~id,area,mean) # average leaf area per plant
head(aarea); nrow(aarea) # 2798
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,area); nrow(am) # add mean leaf area per plant
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,aarea); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,aarea); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 658
length(unique(am$sp)) #
hist(table(am$sp))
write.csv(am,"DATA.csv",row.names=F)
# Load packages and functions
library(rjags) # Bayesian analysis
library(coda) # MCMC
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
head(data)
nrow(data)
length(unique(data$sp))
factor(data$sp)
as.numeric(factor(data$sp))
length(unique(data$sp))
table(data$sp)
table(table(data$sp))
head(data
)
cbind(log(data[,c("nl","area.cm2")]))
# Load priors for the model (deal with it later...)
sinds = cbind(log(data[,c("nl","area.cm2")]))
as.data.frame(sinds)
class(sinds)
log(data$dbh)
log(data$dbh)
data$dbh
data$dbh/1000
log(data$dbh/1000)
refD = median(data$dbh/1000) # median DBH
data$cii-1
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
head(data)
data = subset(data,lblade=="simple")
head(data)
head(data); table(data$lblade)
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
table(data$lblade)
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
data = subset(data,lblade=="simple")
head(data); table(data$lblade)
# Load priors for the model (deal with it later...)
sinds = cbind(log(data[,c("nl","area.cm2")]))
refD = median(data$dbh/1000) # median DBH
nrow(data)
length(unique(data$sp))
as.numeric(factor(data$sp))
head(data
)
hist(data$ldm)
hist(log(data$ldm))
# Load priors for the model (deal with it later...)
sinds = cbind(log(data[,c("nl","ldm","area.cm2")]))
hist(data$cii)
dat = list(
N = nrow(data), #S = length(unique(data$sp)), sp = as.numeric(factor(data$sp)), # metadata
A = sinds, # leaf data (individual level)
D = log(data$dbh/1000)-refD, L = data$cii-1 # covariates (individual level)
#priPA=solve(priVA), priPa=solve(priVa), # priors for architecture model (alphas)
#Hmax=hmax$Hmax-refHmax, # predictor (species level)
#prit=prit, priPt=solve(priVt), # priors for Hmax effects
#preD=preD2-refD, preL=preL, preHmax=preHmax-refHmax, presp=presp # predictions' parameters
)
dat
solve(priVA)
diag(rep(.001,3))
diag(rep(.001,9))
rep(0,9)
# Basic model input and parameters
dat = list(
N = nrow(data), #S = length(unique(data$sp)), sp = as.numeric(factor(data$sp)), # metadata
A = sinds, # leaf data (individual level)
D = log(data$dbh/1000)-refD, L = data$cii-1, # covariates (individual level)
priPA = diag(rep(.001,3)), pripa = diag(rep(.001,9)), prim = rep(0,9)  # priors for sampling error model (alphas)
#Hmax=hmax$Hmax-refHmax, # predictor (species level)
#prit=prit, priPt=solve(priVt), # priors for Hmax effects
#preD=preD2-refD, preL=preL, preHmax=preHmax-refHmax, presp=presp # predictions' parameters
)
## MODEL
# JAGS model
cat("model{
### Likelihood
## Individual level
for(i in 1:N){
# Size and illumination effects on leaf size/number
MA[i,1:r] = alpha[1:3] + alpha[4:6]*D[i] + alpha[7:9]*L[i] # size and light effects
A[i,1:3] ~ dmnorm(MA[i,1:3],PA[1:3,1:3]) # sampling error for response variables
}
alpha[1:9] ~ dmnorm(ma[1:9],pa[1:9,1:9])
### Priors
# Inverse of var-covariance matrices
PA ~ dwish(priPA,3+1) # individual traits (Sigma)
pa ~ dwish(pripa,9+1) # parameters (Sigma)
# Alphas
ma ~ dmnorm(prim,pripa) # Hmax effects on architectural parameters
### Statistics
# Variances and covariances
VA = inverse(PA) # Covariances among response variables (after accounting for size and light effects)
}",
file=paste0("JAGS_model.txt"))
## MODEL
# JAGS model
cat("model{
### Likelihood
## Individual level
for(i in 1:N){
# Size and illumination effects on leaf size/number
MA[i,1:3] = alpha[1:3] + alpha[4:6]*D[i] + alpha[7:9]*L[i] # size and light effects
A[i,1:3] ~ dmnorm(MA[i,1:3],PA[1:3,1:3]) # sampling error for response variables
}
alpha[1:9] ~ dmnorm(ma[1:9],pa[1:9,1:9])
### Priors
# Inverse of var-covariance matrices
PA ~ dwish(priPA,3+1) # individual traits (Sigma)
pa ~ dwish(pripa,9+1) # parameters (Sigma)
# Alphas
ma ~ dmnorm(prim,pripa) # Hmax effects on architectural parameters
### Statistics
# Variances and covariances
VA = inverse(PA) # Covariances among response variables (after accounting for size and light effects)
}",
file="JAGS_model.txt")
# Run JAGS
mod = jags.model(file="JAGS_model.txt", data=dat, n.chains=3, n.adapt=2000)
N
nrow(data)
## MCMC
# Burnin
update(mod,n.iter=10000)
## MODEL
# JAGS model
cat("model{
### Likelihood
## Individual level
for(i in 1:N){
# Size and illumination effects on leaf size/number
MA[i,1:3] = alpha[1:3] + alpha[4:6]*D[i] + alpha[7:9]*L[i] # size and light effects
A[i,1:3] ~ dmnorm(MA[i,1:3],PA[1:3,1:3]) # sampling error for response variables
}
alpha[1:9] ~ dmnorm(ma[1:9],pa[1:9,1:9])
### Priors
# Inverse of var-covariance matrices
PA ~ dwish(priPA,3+1) # individual traits (Sigma)
pa ~ dwish(pripa,9+1) # parameters (Sigma)
# Alphas
ma ~ dmnorm(prim,pripa) # Hmax effects on architectural parameters
### Statistics
# Variances and covariances
VA = inverse(PA) # Covariances among response variables (after accounting for size and light effects)
va = inverse(pa) # Covariances among alphas
}",
file="JAGS_model.txt")
# Run JAGS
mod = jags.model(file="JAGS_model.txt", data=dat, n.chains=3, n.adapt=2000)
## MCMC
# Burnin
update(mod,n.iter=10000)
params = c("alpha","ma", # effects (size, light)
"VA","Va") # covariances matrices
6680*4
6680/20
6680*4/20
# JAGS output
params = c("alpha","ma", # effects (size, light)
"VA","Va") # covariances matrices
res = coda.samples(mod,params,n.iter=6680*4,thin=20)
dim(res[[1]]) # one of the chains
res2 = matrix(res)
dim(res2)
dim(res2)
res2
res2 = as.matrix(res)
dim(res2)
res2[,"alpha[4]"]
hist(res2[,"alpha[4]"])
hist(res2[,"alpha[4]"]); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[4]"],main="D effect on Nl"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[4]"],main="D effect on LN"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[5]"],main="D effect on LDM"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[6]"],main="D effect on LA"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[6]"],main="D effect on LA"); abline(v=0,col=2,lwd=2,lty=3)
res2[,"alpha[6]"]>0
sum(res2[,"alpha[6]"]>0)
length(res2[,"alpha[6]"]>0)
sum(res2[,"alpha[6]"]>0)/length(res2[,"alpha[6]"]>0)
res2[,"alpha[1]"]
res2[,"alpha[2]"]
plot(res2[,"alpha[1]"],res2[,"alpha[2]"])
plot(res2[,"alpha[1]"],res2[,"alpha[3]"])
# Load packages and functions
library(rjags) # Bayesian analysis
library(coda) # MCMC
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
data = subset(data,lblade=="simple")
head(data); table(data$lblade)
# Load priors for the model (deal with it later...)
sinds = cbind(log(data[,c("nl","ldm","area.cm2")]))
refD = median(data$dbh/1000) # median DBH
median(data$dbh/1000)
data$dbh/1000
log(data[,c("nl","ldm","area.cm2")])
# Load priors for the model (deal with it later...)
sinds = log(data[,c("nl","ldm","area.cm2")])
class(sinds)
log(data[,c("nl","ldm","area.cm2")])
data$nl
head(data)
log(data[,c("tnlc","ldm","area.cm2")])
# Load priors for the model (deal with it later...)
sinds = log(data[,c("tnlc","ldm","area.cm2")])
rm(list=ls())
# Leaf area
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
names(area)[4] = "id"
head(area); tail(area); str(area) # check data
nrow(area) # 21069
# Get rid of non-identified entries
area = area[which(!is.na(as.numeric(area$id))),] # exclude problematic ids
nrow(area) # 20624
# Convert leaf area into cm^2
area$area.cm2 = area$Area/13819.17803
head(area)
# Calculate the average per plant
aarea = aggregate(area.cm2~id,area,mean) # average leaf area per plant
head(aarea); nrow(aarea) # 2798
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
names(arch)
names(mass)
mass = read.csv("traits.csv") # load raw trait data frame
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
hread(am)
head(am)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,aarea); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 658
length(unique(am$sp)) # 378
hist(table(am$sp)) # sample size per species
am$ldm/am$nl
am$aldm = am$ldm/am$nl
head(am); nrow(am) # 658
write.csv(am,"DATA.csv",row.names=F)
# Load packages and functions
library(rjags) # Bayesian analysis
library(coda) # MCMC
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
data = subset(data,lblade=="simple")
head(data); table(data$lblade)
# Load priors for the model (deal with it later...)
sinds = log(data[,c("tnlc","aldm","area.cm2")])
sinds
median(data$dbh/1000)
refD
refD = log(median(data$dbh/1000)) # median DBH
refD
log(data$dbh/1000)-refD
data$cii
nrow(data)
# Basic model input and parameters
dat = list(
N = nrow(data), #S = length(unique(data$sp)), sp = as.numeric(factor(data$sp)), # metadata
A = sinds, # leaf data (individual level)
D = log(data$dbh/1000)-refD, L = data$cii-1, # covariates (individual level)
priPA = diag(rep(.001,3)), pripa = diag(rep(.001,9)), prim = rep(0,9)  # priors for sampling error model (alphas)
#Hmax=hmax$Hmax-refHmax, # predictor (species level)
#prit=prit, priPt=solve(priVt), # priors for Hmax effects
#preD=preD2-refD, preL=preL, preHmax=preHmax-refHmax, presp=presp # predictions' parameters
)
dat
## MODEL
# JAGS model
cat("model{
### Likelihood
## Individual level
for(i in 1:N){
# Size and illumination effects on leaf size/number
MA[i,1:3] = alpha[1:3] + alpha[4:6]*D[i] + alpha[7:9]*L[i] # size and light effects
A[i,1:3] ~ dmnorm(MA[i,1:3],PA[1:3,1:3]) # sampling error for response variables
}
alpha[1:9] ~ dmnorm(ma[1:9],pa[1:9,1:9])
### Priors
# Inverse of var-covariance matrices
PA ~ dwish(priPA,3+1) # individual traits (Sigma)
pa ~ dwish(pripa,9+1) # parameters (Sigma)
# Alphas
ma ~ dmnorm(prim,pripa) # Hmax effects on architectural parameters
### Statistics
# Variances and covariances
VA = inverse(PA) # Covariances among response variables (after accounting for size and light effects)
va = inverse(pa) # Covariances among alphas
}",
file="JAGS_model.txt")
# Run JAGS
mod = jags.model(file="JAGS_model.txt", data=dat, n.chains=3, n.adapt=2000)
## MCMC
# Burnin
update(mod,n.iter=10000)
# JAGS output
params = c("alpha","ma", # effects (size, light)
"VA","va") # covariances matrices
res = coda.samples(mod,params,n.iter=6680*4,thin=20)
dim(res[[1]]) # one of the chains
9+9+9+81
res2 = as.matrix(res)
dim(res2)
hist(res2[,"alpha[4]"],main="D effect on LN"); abline(v=0,col=2,lwd=2,lty=3)
median(res2[,"alpha[4]"])
median(res2[,"alpha[1]"])
exp(4.7)
exp(refD)
4.7+1.25*log(1)
4.7+1.25*(log(2.8)-refD)
exp(4.7+1.25*(log(2.8)-refD))
exp(4.7+1.25*(log(3.8)-refD))
exp(4.7+1.25*(log(4.8)-refD))
median(res2[,"alpha[4]"])
hist(res2[,"alpha[5]"],main="D effect on LDM"); abline(v=0,col=2,lwd=2,lty=3)
median(res2[,"alpha[4]"])
hist(res2[,"alpha[4]"],main="D effect on LN"); abline(v=0,col=2,lwd=2,lty=3);
sum(res2[,"alpha[4]"]>0)/length(res2[,"alpha[4]"]>0)
hist(res2[,"alpha[5]"],main="D effect on LDM"); abline(v=0,col=2,lwd=2,lty=3)
median(res2[,"alpha[5]"]); sum(res2[,"alpha[5]"]>0)/length(res2[,"alpha[5]"]>0)
hist(res2[,"alpha[6]"],main="D effect on LA"); abline(v=0,col=2,lwd=2,lty=3)
median(res2[,"alpha[6]"]); sum(res2[,"alpha[6]"]>0)/length(res2[,"alpha[6]"]>0)
median(res2[,"alpha[2]"])
exp(median(res2[,"alpha[2]"]))
exp(median(res2[,"alpha[3]"]))
hist(res2[,"VA[1,1]"])
hist(res2[,"VA[2,2]"])
hist(res2[,"VA[3,3]"])
hist(res2[,"VA[2,3]"])
hist(res2[,"va[2,3]"])
hist(res2[,"VA[3,2]"])
hist(res2[,"VA[2,3]"])
hist(res2[,"VA[1,3]"])
hist(res2[,"VA[1,2]"])
res2[,"alpha[1]"]
res2[,"alpha[4]"]
median(res2[,"alpha[4]"])
median(res2[,"alpha[1]"])
refD
log(x)-refD
curve(exp(median(res2[,"alpha[1]"]) + median(res2[,"alpha[4]"])*(log(x)-refD)))
range(data$dbh)
curve(exp(median(res2[,"alpha[1]"]) + median(res2[,"alpha[4]"])*(log(x)-refD)),from=0,to=4)
curve(exp(median(res2[,"alpha[1]"]) + median(res2[,"alpha[4]"])*(log(x)-refD)),from=0,to=4,ylab="Number of leaves per plant")
curve(exp(median(res2[,"alpha[1]"]) + median(res2[,"alpha[4]"])*(log(x)-refD)),from=0,to=4,ylab="Number of leaves per plant",xlab="DBH (cm)")
curve(exp(median(res2[,"alpha[2]"]) + median(res2[,"alpha[5]"])*(log(x)-refD)),from=0,to=4,ylab="Mean leaf dry mass (mg)",xlab="DBH (cm)")
curve(exp(median(res2[,"alpha[3]"]) + median(res2[,"alpha[6]"])*(log(x)-refD)),from=0,to=4,ylab="Mean leaf area (cm^2)",xlab="DBH (cm)")
curve(exp(median(res2[,"alpha[1]"]) + median(res2[,"alpha[4]"])*(log(x)-refD)),from=0,to=4,ylab="Number of leaves per plant",xlab="DBH (cm)")
points(tnlc~dbh,data,col=gray(.5,.5),pch=16)
head(data)
points(tnlc~dbh/1000,data,col=gray(.5,.5),pch=16)
# Leaf area
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
names(area)[4] = "id"
head(area); tail(area); str(area) # check data
nrow(area) # 21069
# Get rid of non-identified entries
area = area[which(!is.na(as.numeric(area$id))),] # exclude problematic ids
nrow(area) # 20624
# Convert leaf area into cm^2
area$area.cm2 = area$Area/13819.17803
head(area)
# Calculate the average per plant
aarea = aggregate(area.cm2~id,area,mean) # average leaf area per plant
head(aarea); nrow(aarea) # 2798
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,aarea); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
am$dbh = am$dbh/1000 # convert dbh to cm
### FIX! #### nl refers to number of leaves scanned, not leaf units!
am$aldm = am$ldm/am$nl # calculates mean leaf dry mass per plant
#############
head(am); nrow(am) # 658
length(unique(am$sp)) # 378
hist(table(am$sp)) # sample size per species
write.csv(am,"DATA.csv",row.names=F)
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
data = subset(data,lblade=="simple")
head(data); table(data$lblade)
curve(exp(median(res2[,"alpha[1]"]) + median(res2[,"alpha[4]"])*(log(x)-refD)),from=0,to=4,ylab="Number of leaves per plant",xlab="DBH (cm)")
points(tnlc~dbh,data,col=gray(.5,.5),pch=16)
curve(exp(median(res2[,"alpha[2]"]) + median(res2[,"alpha[5]"])*(log(x)-refD)),from=0,to=4,ylab="Mean leaf dry mass (mg)",xlab="DBH (cm)")
points(aldm~dbh,data,col=gray(.5,.5),pch=16)
head(data)
curve(exp(median(res2[,"alpha[1]"]) + median(res2[,"alpha[4]"])*(log(x)-refD)),from=1,to=4,ylab="Number of leaves per plant",xlab="DBH (cm)")
points(tnlc~dbh,data,col=gray(.5,.5),pch=16)
curve(exp(median(res2[,"alpha[3]"]) + median(res2[,"alpha[6]"])*(log(x)-refD)),from=1,to=4,ylab="Mean leaf area (cm^2)",xlab="DBH (cm)")
points(area.cm2~dbh,data,col=gray(.5,.5),pch=16)
curve(exp(median(res2[,"alpha[3]"]) + median(res2[,"alpha[6]"])*(log(x)-refD)),from=1,to=4,ylab="Mean leaf area (cm^2)",xlab="DBH (cm)")
points(area.cm2~dbh,data,col=gray(.5,.5),pch=16)
bn = median(res2[,"alpha[1]"]) # intercept for # leaves
ba = median(res2[,"alpha[3]"]) # intercept for leaf area
an = median(res2[,"alpha[4]"]) # slope for NL*D
aa = median(res2[,"alpha[6]"]) # slope for A*D
bn
curve(exp(bn*ba + (bn*aa+ba*an)*(log(x)-refD) + an*aa*(log(x)-refD)^2),from=1,to=4)
curve(exp(bn*ba + (bn*aa+ba*an)*(log(x)-refD) + an*aa*(log(x)-refD)^2),from=1,to=4ylab="Total leaf area per plant (cm^2)",xlab="DBH (cm)")
curve(exp(bn*ba + (bn*aa+ba*an)*(log(x)-refD) + an*aa*(log(x)-refD)^2),from=1,to=4,ylab="Total leaf area per plant (cm^2)",xlab="DBH (cm)")
data$dbh
points(area.cm2*tnlc,data,col=gray(.5,.5),pch=16)
points(data$area.cm2*data$tnlc,col=gray(.5,.5),pch=16)
points(y=data$area.cm2*data$tnlc,x=data$dbh,col=gray(.5,.5),pch=16)
curve(exp(bn*ba + (bn*aa+ba*an)*(log(x)-refD) + an*aa*(log(x)-refD)^2),from=1,to=4,ylab="Total leaf area per plant (cm^2)",xlab="DBH (cm)")
points(y=data$area.cm2*data$tnlc,x=data$dbh,col=gray(.5,.5),pch=16)
curve((bn*ba + (bn*aa+ba*an)*(log(x)-refD) + an*aa*(log(x)-refD)^2),from=1,to=4,ylab="Total leaf area per plant (cm^2)",xlab="DBH (cm)")
points(y=data$area.cm2*data$tnlc,x=data$dbh,col=gray(.5,.5),pch=16)
data$area.cm2
bn
ba
