# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
nrow(area)
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
unique(area$id)
length(unique(area$id))
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
area = aggregate(area~id,area,mean) # average leaf area per plant
head(area); nrow(area)
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 733
table(am$sp)
range(table(am$sp))
hist(table(am$sp))
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442
subset(area,is.na(area))
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
head(am); nrow(am) # 442 -> it could be 733
area$id
am$id
sum(am$id%in%area$id)
sum(!am$id%in%area$id)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
#am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
sum(am$id%in%area$id)
sum(!am$id%in%area$id)
which(am$id%in%area$id)
am[which(am$id%in%area$id),]
am[which(!am$id%in%area$id),]
am[which(!am$id%in%area$id),"id"]
am[which(!am$id%in%area$id),]
am[which(!am$id%in%area$id),"trip"]
hist(am[which(!am$id%in%area$id),"trip"])
write.csv(am[which(!am$id%in%area$id),],"missingIDs.csv",row.names=F)
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
area = aggregate(area~id,area,mean) # average leaf area per plant
head(area); nrow(area)
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
#am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
hist(table(am$sp))
write.csv(am,"DATA.csv",row.names=F)
head(am)
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
area = aggregate(area~id,area,mean) # average leaf area per plant
head(area); nrow(area)
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
hist(table(am$sp))
write.csv(am,"DATA.csv",row.names=F)
HEAD(AM)
head(am)
am[8,]
ls()
ls()
# Leaf area
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area)
str(area)
area[215:4540,]
tail(area)
strsplit(area$file.name, "_")
head(area)
tmp=="230182POUFUL"
is.numeric(area$Plant_ID)
area$Plant_ID
as.numeric(area$Plant_ID)
# Get rid of non-identified entries
is.numeric(as.numeric(area$Plant_ID))
?is.numeric
# Get rid of non-identified entries
is.na(as.numeric(area$Plant_ID))
!is.na(as.numeric(area$Plant_ID))
# Get rid of non-identified entries
area[!is.na(as.numeric(area$Plant_ID)),]
which(!is.na(as.numeric(area$Plant_ID)))
as.numeric(area$Plant_ID)
which(!is.na(as.numeric(area$Plant_ID)))
tmp = which(!is.na(as.numeric(area$Plant_ID)))
is.na(tmp)
any(is.na(tmp))
!is.na(as.numeric(area$Plant_ID))
which(!is.na(as.numeric(area$Plant_ID)))
# Get rid of non-identified entries
area[which(!is.na(as.numeric(area$Plant_ID))),]
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); tail(area); str(area) # check data
# Get rid of non-identified entries
area = area[which(!is.na(as.numeric(area$Plant_ID))),] # exclude problematic ids
# Leaf area
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); tail(area); str(area) # check data
nrow(area) #
# Get rid of non-identified entries
area = area[which(!is.na(as.numeric(area$Plant_ID))),] # exclude problematic ids
nrow(area)
head(area)
# Convert leaf area into cm^2
area$area = area$Area/13819.17803
head(area)
sqrt(48)
sqrt(148)
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); tail(area); str(area) # check data
nrow(area) # 21069
# Get rid of non-identified entries
area = area[which(!is.na(as.numeric(area$Plant_ID))),] # exclude problematic ids
nrow(area) # 20624
# Convert leaf area into cm^2
area$area.cm2 = area$Area/13819.17803
head(area.cm2)
# Convert leaf area into cm^2
area$area.cm2 = area$Area/13819.17803
head(area.cm2)
head(area)
# Calculate the average per plant
aarea = aggregate(area.cm2~Plant_ID,area,mean) # average leaf area per plant
head(area); nrow(area)
head(aarea); nrow(aarea) #
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)
names(arch)[4] = "Plant_ID"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "Plant_ID"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
am = merge(arch,mass,by="Plant_ID"); nrow(am)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am)
am = merge(am,mao[,c("id","sp","dbh0")],by="Plant_ID"); nrow(am) # add species identities and plant initial size
am = merge(am,mao[,c("Plant_ID","sp","dbh0")],by="Plant_ID"); nrow(am) # add species identities and plant initial size
head(mao)
# Leaf area
area = read.csv("RAW_leafSize.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); tail(area); str(area) # check data
names(area)[4]
names(area)[4] = "id"
head(area); tail(area); str(area) # check data
nrow(area) # 21069
# Get rid of non-identified entries
area = area[which(!is.na(as.numeric(area$id))),] # exclude problematic ids
nrow(area) # 20624
# Convert leaf area into cm^2
area$area.cm2 = area$Area/13819.17803
head(area)
# Calculate the average per plant
aarea = aggregate(area.cm2~id,area,mean) # average leaf area per plant
head(aarea); nrow(aarea) # 2798
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,area); nrow(am) # add mean leaf area per plant
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,aarea); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,aarea); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 658
length(unique(am$sp)) #
hist(table(am$sp))
write.csv(am,"DATA.csv",row.names=F)
# Load packages and functions
library(rjags) # Bayesian analysis
library(coda) # MCMC
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
head(data)
nrow(data)
length(unique(data$sp))
factor(data$sp)
as.numeric(factor(data$sp))
length(unique(data$sp))
table(data$sp)
table(table(data$sp))
head(data
)
cbind(log(data[,c("nl","area.cm2")]))
# Load priors for the model (deal with it later...)
sinds = cbind(log(data[,c("nl","area.cm2")]))
as.data.frame(sinds)
class(sinds)
log(data$dbh)
log(data$dbh)
data$dbh
data$dbh/1000
log(data$dbh/1000)
refD = median(data$dbh/1000) # median DBH
data$cii-1
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
head(data)
data = subset(data,lblade=="simple")
head(data)
head(data); table(data$lblade)
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
table(data$lblade)
# Load data input for the model
data = read.csv("DATA.csv",as.is=T)
data = subset(data,lblade=="simple")
head(data); table(data$lblade)
# Load priors for the model (deal with it later...)
sinds = cbind(log(data[,c("nl","area.cm2")]))
refD = median(data$dbh/1000) # median DBH
nrow(data)
length(unique(data$sp))
as.numeric(factor(data$sp))
head(data
)
hist(data$ldm)
hist(log(data$ldm))
# Load priors for the model (deal with it later...)
sinds = cbind(log(data[,c("nl","ldm","area.cm2")]))
hist(data$cii)
dat = list(
N = nrow(data), #S = length(unique(data$sp)), sp = as.numeric(factor(data$sp)), # metadata
A = sinds, # leaf data (individual level)
D = log(data$dbh/1000)-refD, L = data$cii-1 # covariates (individual level)
#priPA=solve(priVA), priPa=solve(priVa), # priors for architecture model (alphas)
#Hmax=hmax$Hmax-refHmax, # predictor (species level)
#prit=prit, priPt=solve(priVt), # priors for Hmax effects
#preD=preD2-refD, preL=preL, preHmax=preHmax-refHmax, presp=presp # predictions' parameters
)
dat
solve(priVA)
diag(rep(.001,3))
diag(rep(.001,9))
rep(0,9)
# Basic model input and parameters
dat = list(
N = nrow(data), #S = length(unique(data$sp)), sp = as.numeric(factor(data$sp)), # metadata
A = sinds, # leaf data (individual level)
D = log(data$dbh/1000)-refD, L = data$cii-1, # covariates (individual level)
priPA = diag(rep(.001,3)), pripa = diag(rep(.001,9)), prim = rep(0,9)  # priors for sampling error model (alphas)
#Hmax=hmax$Hmax-refHmax, # predictor (species level)
#prit=prit, priPt=solve(priVt), # priors for Hmax effects
#preD=preD2-refD, preL=preL, preHmax=preHmax-refHmax, presp=presp # predictions' parameters
)
## MODEL
# JAGS model
cat("model{
### Likelihood
## Individual level
for(i in 1:N){
# Size and illumination effects on leaf size/number
MA[i,1:r] = alpha[1:3] + alpha[4:6]*D[i] + alpha[7:9]*L[i] # size and light effects
A[i,1:3] ~ dmnorm(MA[i,1:3],PA[1:3,1:3]) # sampling error for response variables
}
alpha[1:9] ~ dmnorm(ma[1:9],pa[1:9,1:9])
### Priors
# Inverse of var-covariance matrices
PA ~ dwish(priPA,3+1) # individual traits (Sigma)
pa ~ dwish(pripa,9+1) # parameters (Sigma)
# Alphas
ma ~ dmnorm(prim,pripa) # Hmax effects on architectural parameters
### Statistics
# Variances and covariances
VA = inverse(PA) # Covariances among response variables (after accounting for size and light effects)
}",
file=paste0("JAGS_model.txt"))
## MODEL
# JAGS model
cat("model{
### Likelihood
## Individual level
for(i in 1:N){
# Size and illumination effects on leaf size/number
MA[i,1:3] = alpha[1:3] + alpha[4:6]*D[i] + alpha[7:9]*L[i] # size and light effects
A[i,1:3] ~ dmnorm(MA[i,1:3],PA[1:3,1:3]) # sampling error for response variables
}
alpha[1:9] ~ dmnorm(ma[1:9],pa[1:9,1:9])
### Priors
# Inverse of var-covariance matrices
PA ~ dwish(priPA,3+1) # individual traits (Sigma)
pa ~ dwish(pripa,9+1) # parameters (Sigma)
# Alphas
ma ~ dmnorm(prim,pripa) # Hmax effects on architectural parameters
### Statistics
# Variances and covariances
VA = inverse(PA) # Covariances among response variables (after accounting for size and light effects)
}",
file="JAGS_model.txt")
# Run JAGS
mod = jags.model(file="JAGS_model.txt", data=dat, n.chains=3, n.adapt=2000)
N
nrow(data)
## MCMC
# Burnin
update(mod,n.iter=10000)
## MODEL
# JAGS model
cat("model{
### Likelihood
## Individual level
for(i in 1:N){
# Size and illumination effects on leaf size/number
MA[i,1:3] = alpha[1:3] + alpha[4:6]*D[i] + alpha[7:9]*L[i] # size and light effects
A[i,1:3] ~ dmnorm(MA[i,1:3],PA[1:3,1:3]) # sampling error for response variables
}
alpha[1:9] ~ dmnorm(ma[1:9],pa[1:9,1:9])
### Priors
# Inverse of var-covariance matrices
PA ~ dwish(priPA,3+1) # individual traits (Sigma)
pa ~ dwish(pripa,9+1) # parameters (Sigma)
# Alphas
ma ~ dmnorm(prim,pripa) # Hmax effects on architectural parameters
### Statistics
# Variances and covariances
VA = inverse(PA) # Covariances among response variables (after accounting for size and light effects)
va = inverse(pa) # Covariances among alphas
}",
file="JAGS_model.txt")
# Run JAGS
mod = jags.model(file="JAGS_model.txt", data=dat, n.chains=3, n.adapt=2000)
## MCMC
# Burnin
update(mod,n.iter=10000)
params = c("alpha","ma", # effects (size, light)
"VA","Va") # covariances matrices
6680*4
6680/20
6680*4/20
# JAGS output
params = c("alpha","ma", # effects (size, light)
"VA","Va") # covariances matrices
res = coda.samples(mod,params,n.iter=6680*4,thin=20)
dim(res[[1]]) # one of the chains
res2 = matrix(res)
dim(res2)
dim(res2)
res2
res2 = as.matrix(res)
dim(res2)
res2[,"alpha[4]"]
hist(res2[,"alpha[4]"])
hist(res2[,"alpha[4]"]); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[4]"],main="D effect on Nl"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[4]"],main="D effect on LN"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[5]"],main="D effect on LDM"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[6]"],main="D effect on LA"); abline(v=0,col=2,lwd=2,lty=3)
hist(res2[,"alpha[6]"],main="D effect on LA"); abline(v=0,col=2,lwd=2,lty=3)
res2[,"alpha[6]"]>0
sum(res2[,"alpha[6]"]>0)
length(res2[,"alpha[6]"]>0)
sum(res2[,"alpha[6]"]>0)/length(res2[,"alpha[6]"]>0)
res2[,"alpha[1]"]
res2[,"alpha[2]"]
plot(res2[,"alpha[1]"],res2[,"alpha[2]"])
plot(res2[,"alpha[1]"],res2[,"alpha[3]"])
