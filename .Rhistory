head(l)
# Fix total number of leaves for compound leaves
l[l$lblade!="simple","tnlc"] = l[l$lblade!="simple","tnlc"]*l[l$lblade!="simple","nsl"]/l[l$lblade!="simple","nl"]
mod = lm(log(tnlc)~log(area),l); summary(mod)
nd.mod = lm(log(tnlc)~log(dbh),l); summary(nd.mod)
nda.mod = lm(nd.mod$residuals~log(l$area)); summary(nda.mod)
m.mod = lm(log(tnlc*area)~log(dbh)+cii,l); summary(m.mod)
tla.mod = lm(log(tnlc*area)~log(dbh),l); summary(tla.mod)
plot(log(tnlc)~log(area),l)
curve(log(80000)-log(x),add=T,col=2)
plot((tnlc)~(area),l,log="xy",xlab=expression(paste("Leaf area (",cm^2,")")),ylab="Leaf number",pch=16,col=grey(.5,.7))
curve(100/x,add=T,col=1,from=1,to=1000,lty=2)
curve(1000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(10000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(100000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(exp(mod$coef[1])*x^mod$coef[2],add=T,col=2,lwd=2,from=1,to=1000)
legend("topright",legend=c(paste0("slope = ",round(mod$coef[2],2),"***"),paste0("SE = ",round(summary(mod)$coef[2,2],2))),bty="n",text.col=2)
text(expression(paste("0.01 ",m^2)),x=26,y=4.5,col=1,cex=.7,srt=-50)
text(expression(paste("0.1 ",m^2)),x=255,y=4.5,col=1,cex=.7,srt=-50)
text(expression(paste("1.0 ",m^2)),x=5,y=2321,col=1,cex=.7,srt=-50)
text(expression(paste("Total leaf area = 10 ",m^2)),x=60,y=2000,col=1,cex=.7,srt=-50)
plot(y=l$tnlc,x=l$dbh,log="xy",xlab="Sapling DBH (cm)",ylab="Total number of leaves")
legend("topleft",text.col=2,c(expression(paste(R^2," = 0.09")),"p < 0.001"),bty="n")
curve(exp(nd.mod$coef[1])*x^nd.mod$coef[2],add=T,col=2,lwd=2)
curve(exp(mod$coef[1])*x^mod$coef[2],from=0.1,to=max(l$area),xlab=expression(paste("Leaf area (",cm^2,")")),ylab="Leaf number",log="xy")
curve(median(l$tnlc*l$area)/x,add=T,col=2,from=0.1,to=max(l$area))
curve(mod$coef[1]+x*mod$coef[2],from=min(log(l$area)),to=max(log(l$area)),xlab=expression(paste("Leaf area (",cm^2,")")),ylab="Leaf number",log="",ylim=c(0,10))
curve(log(median(l$tnlc*l$area))-log(x),add=T,col=2)
curve()
plot(y=l$tnlc,x=l$dbh,log="xy",xlab="Sapling DBH (cm)",ylab="Total number of leaves")
legend("topleft",text.col=2,c(expression(paste(R^2," = 0.09")),"p < 0.001"),bty="n")
curve(exp(nd.mod$coef[1])*x^nd.mod$coef[2],add=T,col=2,lwd=2)
plot((tnlc)~(area),l,log="xy",xlab=expression(paste("Leaf area (",cm^2,")")),ylab="Leaf number",pch=16,col=grey(.5,.7))
curve(100/x,add=T,col=1,from=1,to=1000,lty=2)
curve(1000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(10000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(100000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(exp(mod$coef[1])*x^mod$coef[2],add=T,col=2,lwd=2,from=1,to=1000)
legend("topright",legend=c(paste0("slope = ",round(mod$coef[2],2),"***"),paste0("SE = ",round(summary(mod)$coef[2,2],2))),bty="n",text.col=2)
text(expression(paste("0.01 ",m^2)),x=26,y=4.5,col=1,cex=.7,srt=-50)
text(expression(paste("0.1 ",m^2)),x=255,y=4.5,col=1,cex=.7,srt=-50)
text(expression(paste("1.0 ",m^2)),x=5,y=2321,col=1,cex=.7,srt=-50)
text(expression(paste("Total leaf area = 10 ",m^2)),x=60,y=2000,col=1,cex=.7,srt=-50)
c = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(c); str(c)
c  = c[215:4540,] # remove empty lines
d = strsplit(c$file.name, "_") # split file name in order to extract plant ID
e = lapply(d, function(x) x[1]) # extract plant ID
f = unlist(e) # coerce the list into a vector
# Some small fixs..
f[f=="230182POUFUL"]= 230182
f[f=="230378LACSP1"]= 230378
f = as.numeric(f) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
c$plant.ID = f # fill plant ID column in the original data frame
d = subset(c,select=c("plant.ID","Area.pred..cm.2."))
names(d) = c("id","area")
k = aggregate(area~id,d,mean) # calculate mean leaf size per plant
k2 = aggregate(area~id,d,length) # sum number of scanned leaves per plant
k = merge(x=k,y=k2,by="id"); names(k) = c("id","area","nsl") ; head(k)
architect = read.csv("architect.csv") # load raw architecture data
architect= subset(architect, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(architect)[4] = "id"
l= merge(architect, k, by = "id"); head(l) # combine architecture and leaf size data frames
l= subset(l, !is.na(dbh) & !is.na(tnlc) & !is.na(cii)) # remove NAs
l$dbh = l$dbh/1000 # rescale DBH to cm
head(l)
# Check simple leaves count (whether number of leaves scanned matches with number of leaves collected)
write.csv(subset(l,lblade=="simple" & nl!=nsl),"prob_simple.csv",row.names=F)
# Fix total number of leaves for compound leaves
l[l$lblade!="simple","tnlc"] = l[l$lblade!="simple","tnlc"]*l[l$lblade!="simple","nsl"]/l[l$lblade!="simple","nl"]
mod = lm(log(tnlc)~log(area),l); summary(mod)
nd.mod = lm(log(tnlc)~log(dbh),l); summary(nd.mod)
nda.mod = lm(nd.mod$residuals~log(l$area)); summary(nda.mod)
m.mod = lm(log(tnlc*area)~log(dbh)+cii,l); summary(m.mod)
tla.mod = lm(log(tnlc*area)~log(dbh),l); summary(tla.mod)
range((l$tnlc*l$area))
range(l$area)
range(l$tnlc)
plot(log(tnlc)~log(area),l)
curve(log(80000)-log(x),add=T,col=2)
plot((tnlc)~(area),l,log="xy",xlab=expression(paste("Leaf area (",cm^2,")")),ylab="Leaf number",pch=16,col=grey(.5,.7))
curve(100/x,add=T,col=1,from=1,to=1000,lty=2)
curve(1000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(10000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(100000/x,add=T,col=1,from=1,to=1000,lty=2)
curve(exp(mod$coef[1])*x^mod$coef[2],add=T,col=2,lwd=2,from=1,to=1000)
legend("topright",legend=c(paste0("slope = ",round(mod$coef[2],2),"***"),paste0("SE = ",round(summary(mod)$coef[2,2],2))),bty="n",text.col=2)
text(expression(paste("0.01 ",m^2)),x=26,y=4.5,col=1,cex=.7,srt=-50)
text(expression(paste("0.1 ",m^2)),x=255,y=4.5,col=1,cex=.7,srt=-50)
text(expression(paste("1.0 ",m^2)),x=5,y=2321,col=1,cex=.7,srt=-50)
text(expression(paste("Total leaf area = 10 ",m^2)),x=60,y=2000,col=1,cex=.7,srt=-50)
summary(mod)
summary(nda.mod)
m.mod = lm(log(tnlc*area)~log(dbh)+cii,l); summary(m.mod)
architect = read.csv("architect.csv") # load raw architecture data
head(architect)
traits = read.csv("traits.csv") # load raw trait data frame
head(traits)
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
head(tmp)
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
head(tmp)
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
f[f=="230182POUFUL"]= 230182
f[f=="230378LACSP1"]= 230378
f
tmp
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
head(tmp)
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
tmp
area$plant.ID = tmp # fill plant ID column in the original data frame
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
head(area)
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
head(arch)
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(architect)[4] = "id"
head(arch)
# Merge architecture and leaf area data
aa = merge(arch,area,by="id")
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(architect)[4] = "id"
head(arch)
names(arch)[4] = "id"
head(arch)
# Merge architecture and leaf area data
aa = merge(arch,area,by="id")
head(aa)
head(arch)
# Species identities
spec = read.csv("traits.csv") # load raw trait data frame
head(spec)
# Species identities
mass = read.csv("traits.csv") # load raw trait data frame
head(mass)
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass$sp
# Species identities
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
head(mass)
mass = subset(mass,select=c("plantID","sp","ldm"))
head(mass)
names(mass)[1]
names(mass)[1] = "id"
head(mass)
# Putting things together...
aa = merge(arch,mass,by="id")
head(aa)
aa = order(aa$sp,aa$id)
head(aa)
# Putting things together...
aa = merge(arch,mass,by="id") # merge arch and mass (individual level data)
aa = aa[order(aa$sp,aa$id),]
head(aa)
# Putting things together...
aa = merge(arch,mass,by="id") # merge arch and mass (individual level data)
head(aa)
order(aa$sp,aa$id)
aa = aa[order(aa$sp,aa$id),]
head(aa)
# Putting things together...
aa = merge(arch,mass,by="id") # merge arch and mass (individual level data)
aa = aa[order(aa$sp,aa$id),]
nrow(aa)
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
am = am[order(am$sp,am$id),] # organize by species, then by id
nrow(am) # 1090
aa = subset(aa,!ia.na()) # remove non-identified saplings
aa = subset(aa,!is.na()) # remove non-identified saplings
aa = subset(aa,!is.na(sp)) # remove non-identified saplings
nrow(aa)
aa = subset(aa,sp=="") # remove non-identified saplings
nrow(aa)
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
am = am[order(am$sp,am$id),] # organize by species, then by id
nrow(am) # 1090
am = subset(am,!sp=="") # remove non-identified saplings
nrow(am)
subset(am,sp=="")
subset(am,sp==" ")
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
am = am[order(am$sp,am$id),] # organize by species, then by id
nrow(am) # 1090
am = subset(am,!sp==" ") # remove non-identified saplings
nrow(am)
head(am)
subset(am,is.na(ldm))
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
am = am[order(am$sp,am$id),] # organize by species, then by id
nrow(am) # 1090
am = subset(am,!sp==" " & !sp=="NA NA") # remove non-identified saplings
nrow(am) # 1061
nrow(am)
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
am = am[order(am$sp,am$id),] # organize by species, then by id
nrow(am) # 1090
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm)) # remove non-identified saplings and entries with missing data
nrow(am) # 1056
head(am)
subset(am,!is.na(ldm))
head(am)
subset(am,is.na(tnlc))
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
am = am[order(am$sp,am$id),] # organize by species, then by id
nrow(am) # 1090
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc)) # remove non-identified saplings and entries with missing data
nrow(am) # 1050
head(am)
subset(am,is.na(cii))
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii)) # remove non-identified saplings and entries with missing data
nrow(am) # 725
subset(am,is.na(dbh))
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
am = am[order(am$sp,am$id),] # organize by species, then by id
nrow(am) # 1090
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh)) # remove non-identified saplings and entries with missing data
nrow(am) # 724
head(am)
head(am)
# Species identities
mao = read.csv("RAW_mao.csv")
head(mao)
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
head(area)
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities
mao = read.csv("RAW_mao.csv")
head(mao)
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
head(am)
head(mao)
mao$sp = paste(mao$gen,mao$epi)
head(mao)
colnames(mao)
names(mao)[which(names=="dbh")]
names(mao)[which(names(mao)=="dbh")]
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id") # merge arch and mass (individual level data)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh")],by="id"); nrow(am)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am)
head(am)
am = am[order(am$sp,am$id),] # organize by species, then by id
head(am)
nrow(am) # 1090
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 719
table(am$sp)
table(am$sp)
aggregate(area~id,area,mean)
area = aggregate(area~id,area,mean) # average leaf area per plant
head(area)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = am[order(am$sp,am$id),] # organize by species, then by id
head(area)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,area); nrow(am) # add mean leaf area per plant
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
nrow(area)
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
unique(area$id)
length(unique(area$id))
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
area = aggregate(area~id,area,mean) # average leaf area per plant
head(area); nrow(area)
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 733
table(am$sp)
range(table(am$sp))
hist(table(am$sp))
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442
subset(area,is.na(area))
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
head(am); nrow(am) # 442 -> it could be 733
area$id
am$id
sum(am$id%in%area$id)
sum(!am$id%in%area$id)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
#am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
sum(am$id%in%area$id)
sum(!am$id%in%area$id)
which(am$id%in%area$id)
am[which(am$id%in%area$id),]
am[which(!am$id%in%area$id),]
am[which(!am$id%in%area$id),"id"]
am[which(!am$id%in%area$id),]
am[which(!am$id%in%area$id),"trip"]
hist(am[which(!am$id%in%area$id),"trip"])
write.csv(am[which(!am$id%in%area$id),],"missingIDs.csv",row.names=F)
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
area = aggregate(area~id,area,mean) # average leaf area per plant
head(area); nrow(area)
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
#am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
hist(table(am$sp))
write.csv(am,"DATA.csv",row.names=F)
head(am)
# Leaf area
area = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE) # load raw leaf area data
head(area); str(area)
area  = area[215:4540,] # remove empty lines
tmp = strsplit(area$file.name, "_") # split file name in order to extract plant ID
tmp = lapply(tmp, function(x) x[1]) # extract plant ID
tmp = unlist(tmp) # coerce the list into a vector
head(tmp)
# Some small fixs to plant ids
tmp[tmp=="230182POUFUL"]= 230182
tmp[tmp=="230378LACSP1"]= 230378
tmp = as.numeric(tmp) # coerce a character vector into a numeric one (plants without a valid ID will be assigned NAs)
area$plant.ID = tmp # fill plant ID column in the original data frame
area = subset(area,select=c("plant.ID","Area.pred..cm.2.")) # reduce table
names(area) = c("id","area") # fix some column names
area = aggregate(area~id,area,mean) # average leaf area per plant
head(area); nrow(area)
# Sapling architecture
arch = read.csv("architect.csv") # load raw architecture data
arch= subset(arch, select = c("trip","mm","dd","plantID", "dbh", "tnlc", "cii", "nl", "lblade")) # simplify architecture data frame
names(arch)[4] = "id"
head(arch)
# Leaf mass
mass = read.csv("traits.csv") # load raw trait data frame
mass$sp = paste(mass$gen,mass$epi) # create new column with species names
mass = subset(mass,select=c("plantID","ldm"))
names(mass)[1] = "id"
head(mass)
# Species identities and initial dbh
mao = read.csv("RAW_mao.csv") # plot data
mao$sp = paste(mao$gen,mao$epi) # add species column
names(mao)[which(names(mao)=="dbh")] = "dbh0"
head(mao)
# Putting things together...
am = merge(arch,mass,by="id"); nrow(am) # merge arch and mass (individual level data)
am = merge(am,mao[,c("id","sp","dbh0")],by="id"); nrow(am) # add species identities and plant initial size
am = merge(am,area); nrow(am) # add mean leaf area per plant
am = am[order(am$sp,am$id),] # organize by species, then by id
am = subset(am,!sp==" " & !sp=="NA NA" & !is.na(ldm) & !is.na(tnlc) & !is.na(cii) & !is.na(dbh) & !is.na(dbh0)) # remove non-identified saplings and entries with missing data
head(am); nrow(am) # 442 -> it could be 733
hist(table(am$sp))
write.csv(am,"DATA.csv",row.names=F)
HEAD(AM)
head(am)
am[8,]
