http://bioconductor.org/biocLite.R
"http://bioconductor.org/biocLite.R"
"phyloseq"
"http://bioconductor.org/biocLite.R" "phyloseq"
"phyloseq"
install.packages(""http://bioconductor.org/biocLite.R"")
install.packages("phyloseq")
install.packages("githubinstall")
install.packages("githubinstall")
install.packages("devtools")
library("devtools")
install_github("phyloseq/joey711")
library("devtools")
install_github("phyloseq/joey711")
install_phyloseq(branch = "github")
if(!requireNamespace("BiocManager")){
install.packages("BiocManager")
}
BiocManager::install("phyloseq")
install.packages("BiocManager")
BiocManager::install("Phyloseq")
yes
a
y
BiocManager::install('phyloseq')
BiocManager::install(microbiomeseq)
BiocManager::install("microbiomeseq")
githubinstall::gh_install_packages("microbiomeSeq")
"2"
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("AnnotationDbi", "DESeq2", "GO.db", "impute", "phyloseq", "preprocessCore"))
"restart"
"restart"
defaults write org.R-project.R force.LANG en_US.UTF-8.
(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("AnnotationDbi", "DESeq2", "GO.db", "impute", "phyloseq", "preprocessCore"))
install.packages("BiocManager")
BiocManager::install("microbiomeSeq")
http://www.bioconductor.org/biocLite.R
source("http://www.bioconductor.org/biocLite.R")
biocLite(c("fastcluster", "df2json", "rjson", "gplots", "devtools", "ggplot2","MASS","minet","mixOmics", "qvalue","reshape2","RPA","svDialogs","WGCNA"))
BiocManager::install("biocLite")
githubinstall::gh_install_packages("biocLite")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biocLite")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(microbiomeSeq)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("microbiomeSeq")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("microbiome")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biocLite")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("microbiomeSeq")
library(microbiomeSeq)
library(devtools)
install_github("umerijaz/microbiomeSeq")
remove.packages("vegan", lib="~/R/win-library/3.6")
library(devtools)
install_github("umerijaz/microbiomeSeq")
library(microbiomeSeq)
Skip to content
Why GitHub?
Enterprise
Explore
Marketplace
Pricing
Search
Sign in
Sign up
Code  Issues 18  Pull requests 1  Projects 0  Wiki  Security  Pulse
Join GitHub today
GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.
microbiomeSeq/R/microbiomeSeq_helper_fxns.R
@AlfredUg AlfredUg ordination updates
5548f9e on Dec 6, 2017
23 lines (20 sloc)  725 Bytes
identify.num.variables <- function(physeq){
meta_table <- sample_data(physeq)
num.variables <- meta_table[,sapply(meta_table,is.numeric)]
names.num.variables <- names(num.variables)
return(names.num.variables)
}
get.num.variables <- function(physeq){
meta_table <- sample_data(physeq)
num.variables <- meta_table[,identify.num.variables(physeq)]
not.num.variables <- meta_table[,!colnames(meta_table)%in%colnames(num.variables)]
out <- list(num.variables=num.variables, notnum.variables=not.num.variables)
return(out)
}
select.vars <- function(df1, df2, select.variables=NULL){
if(!is.null(select.variables)){
df1 <- df1[,colnames(df1)%in%select.variables]
}
out<-cbind(df1,df2)
return(out)
}
Â© 2019 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
library(microbiomeSeq)
library(devtools)
install_github("umerijaz/microbiomeSeq")
library(microbiomeSeq)
install.packages("vegan")
library(devtools)
install_github("umerijaz/microbiomeSeq")
library(microbiomeSeq)
library(devtools)
install_github("umerijaz/microbiomeSeq")
demo()
q()
if(!requireNamespace("BiocManager")){
install.packages("BiocManager")
}
BiocManager::install("phyloseq")
install_github("umerijaz/microbiomeSeq")  # Install the package
library(githubinstall)
library(devtools)
install.packages("WGCNA")
install.packages("fso")
install.packages("randomForest")
library(phyloseq)
library(vegan)
library(DESeq2)
library(ggplot2)
library(randomForest)
library(gridExtra)
library(data.table)
library(fso)
library(WGCNA)
library(igraph)
library(devtools)  # Load the devtools package
install_github("umerijaz/microbiomeSeq")  # Install the package
library(microbiomeSeq)  #load the package
install.packages("C:/Users/kiumars/Downloads/microbiomeSeq-master.zip", repos = NULL, type = "win.binary")
install.packages(microbiomeseq)
githubinstall::gh_install_packages(microbiomeseq)
library(devtools)
detach("package:devtools", unload = TRUE)
library(devtools)
install_github("umerijaz/microbiomeSeq")
detach(data.table)
install.packages("microbiomeseq")
install.packages("dplyr")
install.packages("devtools")
install_github("umerijaz/microbiomeSeq")
install.packages("githubinstall")
install_github("umerijaz/microbiomeSeq")
library(githubinstall)
install_github("umerijaz/microbiomeSeq")
(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("AnnotationDbi", "DESeq2", "GO.db", "impute", "phyloseq", "preprocessCore"))
install.packages("BiocManager")
(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("AnnotationDbi", "DESeq2", "GO.db", "impute", "phyloseq", "preprocessCore"))
install_github("umerijaz/microbiomeSeq")
library(githubinstall)
install_github("umerijaz/microbiomeSeq")
githubinstall::githubinstall("umerijaz/microbiomeSeq")
install.packages("adespatial")
install.packages("C:/Users/kiumars/Downloads/ranacapa-master.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/kiumars/Downloads/ranacapa-master.zip", repos = NULL, type = "win.binary")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
library(devtools)
library(devtools)
devtools::install_github("gauravsk/ranacapa")
install.packages("pulsar")
install.packages("VGAM")
library(devtools)
install_github("zdk123/SpiecEasi")
library(SpiecEasi)
install.packages("huge")
library(devtools)
install_github("zdk123/SpiecEasi")
library(SpiecEasi)
force = true
force = TRUE
library(devtools)
install_github("zdk123/SpiecEasi")
library(SpiecEasi)
force = TRUE
plot(x=log(l$area), y=log(l$tnlc), main="Logged Linear Regression Model for Leaf Size & Leaf Number", cex.main=1.65,
abline(mod), cex=log(l$dbh/500+0.5),
xlab = "Leaf Area", ylab = "Leaf Number", cex.lab=1.5,
pch=16, col=round(l$cii), las=1)
##the histogram of leaf area distribution and the log
hist((l$area), main="Distribution of Leaf Area", cex.main=2, xlab=expression(paste("Leaf Area(", cm^2,")")),
ylab="Number of Saplings", cex.lab=1.5, border="dark blue", col="chartreuse3",
breaks=20, ylim=c(0,200), xlim=c(0,800), las=1, fontsize=c(30))
##the histogram of leaf area distribution and the log
hist((l$area), main="Distribution of Leaf Area", cex.main=2, xlab=expression(paste("Leaf Area(", cm^2,")")),
ylab="Number of Saplings", cex.lab=1.5, border="dark blue", col="chartreuse3",
breaks=20, ylim=c(0,200), xlim=c(0,800), las=1, fontsize=c(30))
hist((l$area), main="Distribution of Leaf Area", cex.main=2, xlab=expression(paste("Leaf Area(", cm^2,")")),
ylab="Number of Saplings", cex.lab=1.5, border="dark blue", col="chartreuse3",
breaks=20, ylim=c(0,200), xlim=c(0,800), las=1, fontsize=c(30))
read.csv("Leaf Area and Shape From Trip5-10.csv")
setwd("leaf area and shape")
read.csv("Leaf Area and Shape From Trip5-10.csv")
read.csv("Leaf Area and Shape From Trip5-10.csv")
c = read.csv("Leaf Area and Shape From Trip5-10.csv", stringsAsFactors = FALSE)
head(c)
str(c)
c  = c[215:4540,]
d = strsplit(c$file.name, "_")
e = lapply(d, function(x) x[1])
f = unlist(e)
as.numeric(f)
f[which(is.na(as.numeric(f)))]
f[f=="230182POUFUL"]= 230182
f[f=="230378LACSP1"]= 230378
f = as.numeric(f)
c $plant.ID = f
head (c)
k = aggregate(Area.pred..cm.2.~plant.ID,c,mean)
read.csv("architect.csv")
architect = read.csv("architect.csv")
architect= subset(architect, select = c("plantID", "dbh", "tnlc", "cii"))
names(k)
names(k)[1] = "plantID"
names(k)[2] = "area"
l= merge(architect, k, by = "plantID")
l= merge(architect, k, by = "plantID")
l= subset(l, !is.na(dbh) & !is.na(tnlc) & !is.na(cii))
##use this function to add two graphs on top of each other
par(mfrow=c(1,1))
par(bg="transparent")
##the histogram of leaf area distribution and the log
hist((l$area), main="Distribution of Leaf Area", cex.main=2, xlab=expression(paste("Leaf Area(", cm^2,")")),
ylab="Number of Saplings", cex.lab=1.5, border="dark blue", col="chartreuse3",
breaks=20, ylim=c(0,200), xlim=c(0,800), las=1, fontsize=c(30))
hist(log(l$area), main="", ylab="Number of Saplings", xlab="Log Leaf Area", cex.lab=1.5,
border="dark blue", col="chartreuse3", breaks=20, las=1, ylim=c(0,60), xlim=c(1,7), fontsize=c(30))
hist((l$tnlc), main="Distribution of Leaf Number", cex.main=2, xlab="Total leaf number per individual",
ylab="Number of Saplings", cex.lab=1.5, border="dark blue", col="chartreuse3", nclass=20, ylim=c(0,250), xlim=c(0,2500), las=1, fontsize=c(30))
plot(area~tnlc, l, log="xy", main= "Leaf Area/Number Before Log Transformation", ylab= "Leaf Area", xlab= "Total Number of Leaf Count")
## to make histogram for leaf size histogram
hist(log(l$area))
lm(log(l$tnlc)~log(l$area))
plot(x=log(l$area), y=log(l$tnlc), main="Logged Linear Regression Model for Leaf Size & Leaf Number", cex.main=1.65,
abline(mod), cex=log(l$dbh/500+0.5),
xlab = "Leaf Area", ylab = "Leaf Number", cex.lab=1.5,
pch=16, col=round(l$cii), las=1)
plot(x=log(l$area), y=log(l$tnlc), main="Logged Linear Regression Model for Leaf Size & Leaf Number", cex.main=1.65,
abline (mod), cex=log(l$dbh/500+0.5),
xlab = "Leaf Area", ylab = "Leaf Number", cex.lab=1.5,
pch=16, col=round(l$cii), las=1)
plot(x=log(l$area), y=log(l$tnlc), main="Logged Linear Regression Model for Leaf Size & Leaf Number", cex.main=1.65,
abline (mod), cex=log(l$dbh/500+0.5),
xlab = "Leaf Area", ylab = "Leaf Number", cex.lab=1.5,
pch=16, col=round(l$cii), las=1)
plot(x=log(l$area), y=log(l$tnlc), main="Logged Linear Regression Model for Leaf Size & Leaf Number", cex.main=1.65,
abline (mod), cex=log(l$dbh/500+0.5),
xlab = "Leaf Area", ylab = "Leaf Number", cex.lab=1.5,
pch=16, col=round(l$cii), las=1)
plot(x=log(l$area), y=log(l$tnlc), main="Logged Linear Regression Model for Leaf Size & Leaf Number", cex.main=1.65,
abline(mod), cex=log(l$dbh/500+0.5),
xlab = "Leaf Area", ylab = "Leaf Number", cex.lab=1.5,
pch=16, col=round(l$cii), las=1)
plot(x=log(l$area), y=log(l$tnlc), main="Logged Linear Regression Model for Leaf Size & Leaf Number", cex.main=1.65, cex=log(l$dbh/500+0.5),
xlab = "Leaf Area", ylab = "Leaf Number", cex.lab=1.5,
pch=16, col=round(l$cii), las=1)
